- name: Administrativo Linux -salas
  hosts: administrativos_lin,!sala
  roles:
    - ingressa_ldap
    - acesso_remoto
    - cadeia_certificados
    - token_gd_starsign
    - token_safenet
    - hodprint

- name: Administrativo Linux
  hosts: administrativos_lin

#############################################################
##################### INCLUSÃO DE ROLES #####################
  roles:
    - upgrade_11to12
    - sources_list
    - openaudit
    - fonte_garamound
    - unattendedUpgrades_adm
    - glpi_agent
    - auto_desligamento
    - warsaw
    - foxit
    - java8-oracle
    - role: grub
      tipo: grub_soh_lin

  tasks:
    - name: Add an Apt signing key to a specific keyring file
      ansible.builtin.apt_key:
        id: 4EB27DB2A3B88B8B
        url: https://dl-ssl.google.com/linux/linux_signing_key.pub
        keyring: /etc/apt/trusted.gpg.d/google-chrome.gpg
      when: ansible_os_family == 'Debian'

    - name: Instala utilitários para o bash
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - aptitude
          - bash-completion
          - chrony
          - command-not-found
          - dia
          - dkms
          - firmware-linux-free
          - firmware-linux-nonfree
          - gnome-terminal
          - gscan2pdf
          - gtklp
          - icedtea-netx
          - kdenlive
          - kolourpaint4
          - libcurl4
          - network-manager
          - network-manager-gnome
          - nfs-common
          - okular
          - pdfshuffler
          - ssh
          - system-config-printer
          - unrar
          - vim
          - vlc
      when: ansible_os_family == 'Debian'

    - name: Instala pacotes .deb
      ansible.builtin.apt:
        deb: "{{ deb_pkgs }}"
      loop:
        - https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      loop_control:
        loop_var: deb_pkgs
      when: ansible_os_family == 'Debian'

    - name: Remover programas  - Linux
      ansible.builtin.apt:
        state: absent
        pkg:
          - transmission
          - transmission-common
      when: ansible_os_family == 'Debian'

#########################################################
##################### CONFIGURAÇÕES #####################
    - name: Inclui o role do NTP do Linux
      ansible.builtin.include_role:
        name: geerlingguy.ntp
      vars:
        ntp_timezone: America/Sao_Paulo
        ntp_manage_config: true
        ntp_servers:
          - "pool.ntp.br iburst"
          - "ntp.cais.rnp.br iburst"
          - "ntp.ufsc.br iburst"
      when: ansible_os_family == 'Debian'

    - name: Define conteúdo do /etc/bash.bashrc
      ansible.builtin.copy:
        content: |
          # System-wide .bashrc file for interactive bash(1) shells.
          # To enable the settings / commands in this file for login shells as well,
          # this file has to be sourced in /etc/profile.
          # If not running interactively, don't do anything
          [ -z "$PS1" ] && return

          # check the window size after each command and, if necessary,
          # update the values of LINES and COLUMNS.
          shopt -s checkwinsize

          # set variable identifying the chroot you work in (used in the prompt below)
          if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
              debian_chroot=$(cat /etc/debian_chroot)
          fi

          # set a fancy prompt (non-color, overwrite the one in /etc/profile)
          # but only if not SUDOing and have SUDO_PS1 set; then assume smart user.
          if ! [ -n "${SUDO_USER}" -a -n "${SUDO_PS1}" ]; then
            PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
          fi

          # enable bash completion in interactive shells
          if ! shopt -oq posix; then
            if [ -f /usr/share/bash-completion/bash_completion ]; then
              . /usr/share/bash-completion/bash_completion
            elif [ -f /etc/bash_completion ]; then
              . /etc/bash_completion
            fi
          fi

          # if the command-not-found package is installed, use it
          if [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found ]; then
            function command_not_found_handle {
                    # check because c-n-f could've been removed in the meantime
                          if [ -x /usr/lib/command-not-found ]; then
                /usr/lib/command-not-found -- "$1"
                            return $?
                          elif [ -x /usr/share/command-not-found/command-not-found ]; then
                /usr/share/command-not-found/command-not-found -- "$1"
                            return $?
              else
                printf "%s: command not found\n" "$1" >&2
                return 127
              fi
            }
          fi
          export SHELL=/bin/bash
          export PATH=$PATH:/sbin
        dest: /etc/bash.bashrc
        owner: root
        group: root
        mode: '0644'
        backup: true
      when: ansible_os_family == 'Debian'
      tags: bashrc

##########################################################
################ CONFIGURAÇÕES INDIVIUAIS ################
- name: Configuração salas de aula
  hosts: sala
  roles:
    - configura_monitores
    - remove_ldap
    - flatpak
    - geogebra
    - aluno
  tasks:
    - name: Adiciona linha do usuario aluno no passwd
      ansible.builtin.blockinfile:
        path: /etc/passwd
        backup: true
        block: |
          aluno:x:1001:1001::/home/aluno:
      when: ansible_os_family == 'Debian'

    - name: Adiciona linha do usuario aluno no group
      ansible.builtin.blockinfile:
        path: /etc/group
        backup: true
        block: |
          aluno:x:1001:
      when: ansible_os_family == 'Debian'

    - name: Cria usuário aluno com a senha aluno
      ansible.builtin.user:
        name: aluno
        shell: /bin/bash
        password: $6$B5dpvoG43l67q0sx$r0LDKV2TgNItf/kYx/76l89ZN4LhP/ksYIxp.SSVGttHoSZXLSoB6Hkg2A6y7M7aFJ8zEuauf5kS/yA/P61kN1
        groups: aluno
        append: true
      when: ansible_os_family == 'Debian'

    - name: Pacotes especiais
      ansible.builtin.apt:
        pkg:
          - x2goclient
          - wxmaxima
          - python3-matplotlib
          - python3-numpy
          - python3-scipy
          - python3-pandas
          - python3-pip
      tags: pacotes

##### Configuração do script para apagar o home do aluno a cade inicialização
    - name: Adiciona script para zerar o home do aluno
      ansible.builtin.copy:
        content: |
          #!/bin/bash

          ##Este arquivo eh gerado automaticamente pelo Ansible, nao adianta editar.

          #Restaurar o usuario aluno quando manda desligar a maquina ou reiniciar.
          rm -rf /var/spool/cron/crontabs/aluno
          rm -rf /home/aluno
          tar -zxvf /opt/backup/aluno.tgz -C / --exclude=home/aluno/.ssh/known_hosts
        dest: /etc/init.d/apagaAluno.sh
        owner: root
        group: root
        mode: '0755'
      when: ansible_os_family == 'Debian'
      tags: apagaAluno

    - name: Adiciona o arquivo /lib/systemd/system/apagaAluno.service
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Usuário padrão
          DefaultDependencies=no
          Before=shutdown.target

          [Service]
          Type=oneshot
          ExecStart=/etc/init.d/apagaAluno.sh

          [Install]
          WantedBy=reboot.target halt.target poweroff.target
        dest: /lib/systemd/system/apagaAluno.service
        owner: root
        group: root
        mode: '0644'
      when: ansible_os_family == 'Debian'
      tags: apagaAluno

    - name: Aplica o daemon-reload e o enable no servico apagaAluno - Linux
      ansible.builtin.systemd:
        enabled: true
        daemon_reload: true
        name: apagaAluno
      when: ansible_os_family == 'Debian'
      tags: apagaAluno
