## Para esse role funcionar corretamente ele precisa dos seguintes roles:
# docker (instalação do docker)

- include_role:
    name: docker

- name: Instalar pacotes necessarios - Linux
  apt:
    state: latest
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common
    - openvswitch-switch
    - xterm
    - imagemagick
    - tk
    - tcllib
    - util-linux
    - make
    - socat
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Baixa repositorio no git do IMUNES
  git:
    repo: 'https://github.com/imunes/imunes.git'
    dest: /opt/imunes
    clone: yes
    update: no
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Executa o make install
  make:
    chdir: /opt/imunes/
    target: install
  become: yes
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Criando o arquivo vmd.desktop - Linux Debian
  copy:
    content: |
        [Desktop Entry]
        Encoding=UTF-8
        Name=IMUNES
        Comment=Integrated Multiprotocol Network Emulator/Simulator
        Exec=sudo /usr/local/bin/imunes
        Icon=/opt/imunes/icons/imunes_logo128.png
        Terminal=false
        Type=Application
        Categories=Utility
    dest: /usr/share/applications/imunes.desktop
    owner: root
    group: root
    mode: 0644
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Adiciona pacotes extras dentro da imagem do IMUNES
  shell: "apt-get_imunes install firefox-esr socat -y"
  args:
    executable: /bin/bash
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Criar arquivo /home/.Xresources que personaliza Xterm
  copy:
    content: |
        ! Use a nice truetype font and size by default...
        xterm*faceName: DejaVu Sans Mono Book
        xterm*faceSize: 11

        ! Every shell is a login shell by default (for inclusion of all necessary environment variables)
        xterm*loginshell: true

        ! I like a LOT of scrollback...
        xterm*savelines: 16384

        ! double-click to select whole URLs :D
        xterm*charClass: 33:48,36-47:48,58-59:48,61:48,63-64:48,95:48,126:48

        ! DOS-box colours...
        xterm*foreground: rgb:00/00/00
        xterm*background: rgb:FC/F7/DD
        xterm*color0: rgb:00/00/00
        xterm*color1: rgb:a8/00/00
        xterm*color2: rgb:00/a8/00
        xterm*color3: rgb:a8/54/00
        xterm*color4: rgb:00/00/a8
        xterm*color5: rgb:a8/00/a8
        xterm*color6: rgb:00/a8/a8
        xterm*color7: rgb:a8/a8/a8
        xterm*color8: rgb:54/54/54
        xterm*color9: rgb:fc/54/54
        xterm*color10: rgb:54/fc/54
        xterm*color11: rgb:fc/fc/54
        xterm*color12: rgb:54/54/fc
        xterm*color13: rgb:fc/54/fc
        xterm*color14: rgb:54/fc/fc
        xterm*color15: rgb:fc/fc/fc

        ! right hand side scrollbar...
        xterm*rightScrollBar: true
        xterm*ScrollBar: true

        ! stop output to terminal from jumping down to bottom of scroll again
        xterm*scrollTtyOutput: false

        !Copy and Paste
        xterm*VT100.Translations: #override \
                         Ctrl Shift <Key>V:    insert-selection(CLIPBOARD) \n\
                         Ctrl Shift <Key>C:    copy-selection(CLIPBOARD)

    dest: /home/.Xresources
    owner: root
    group: root
    mode: 0644
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Criar arquivo /etc/xdg/autostart/xrdb-autostart.desktop para caregar automaticamente a personalizalização do Xterm
  copy:
    content: |
        [Desktop Entry]
        Type=Application
        Name=Load config using xrdb
        Exec=xrdb -merge /home/.Xresources
        NoDisplay=true
        X-GNOME-AutoRestart=true
        #X-GNOME-Autostart-Phase=Initialization
        OnlyShowIn=GNOME;MATE;Unity;Cinnamon;
    dest: /etc/xdg/autostart/xrdb-autostart.desktop
    owner: root
    group: root
    mode: 0644
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Adiciona porgramas para serem executados pelo sudo sem senha
  copy:
    content: |
      ALL   ALL=(ALL) NOPASSWD: SETENV: /usr/local/bin/imunes,/usr/local/bin/hcp,/usr/local/bin/himage,\
      /usr/local/bin/vlink,/usr/local/bin/cleanupAll,/opt/imunes-examples/ipsec/start64.sh,\
      /opt/imunes-examples/ipsec/start44.sh,/opt/imunes-examples/ipsec/start46.sh,\
      /opt/imunes-examples/ipsec/nat-ipsec/start_ipsec.sh,/opt/imunes-examples/ipsec/nat-ipsec/start_nat.sh,\
      /opt/imunes-examples/ipsec/start66.sh,/opt/imunes-examples/DHCP/start_dhcp,\
      /opt/imunes-examples/DMZ+DNS+Mail+WEB/start_dns,/opt/imunes-examples/DMZ+DNS+Mail+WEB/start_fw,\
      /opt/imunes-examples/DMZ+DNS+Mail+WEB/start_http,/opt/imunes-examples/DMZ+DNS+Mail+WEB/start_all,\
      /opt/imunes-examples/DMZ+DNS+Mail+WEB/start_mail,/opt/imunes-examples/DHCP6+RSOL/start_dhcpd6,\
      /opt/imunes-examples/DHCP6+RSOL/start_stateless,/opt/imunes-examples/DNS+Mail+WEB/start_dns,\
      /opt/imunes-examples/DNS+Mail+WEB/start_http,/opt/imunes-examples/DNS+Mail+WEB/start_mail,\
      /opt/imunes-examples/gif/start_gif.sh,/opt/imunes-security/service/shellshock/start_http,\
      /opt/imunes-security/service/heartbleed/start_https,/opt/imunes-security/infrastructure/start_ipfw.sh,\
      /opt/imunes-security/ddos/smurf.sh,/opt/imunes-security/ddos/ntp_amp.sh,/opt/imunes-security/ddos/ntp.sh,\
      /opt/imunes-security/service/shellshock/www.host/form.sh,/opt/imunes-security/service/shellshock/shellshock.sh,\
      /opt/imunes-security/service/heartbleed/www.host/form.sh,/opt/imunes-security/service/heartbleed/heartbleed.sh,\
      /opt/imunes-security/helper_scripts/bootstrap.sh,/opt/imunes-security/dnsspoof/dnsspoof.sh,\
      /opt/imunes-security/dnsspoof/prepare.sh,/opt/imunes-security/divertsocket/deploy.sh,\
      /opt/imunes-security/mitm/mitm.sh
    dest: /etc/sudoers.d/imunes
    owner: root
    group: root
    mode: 0440
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Clona repositorio no git do IMUNES-EXAMPLES
  git:
    repo: 'https://github.com/imunes/imunes-examples.git'
    dest: /opt/imunes-examples
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Clona repositorio no git do IMUNES-SECURITY
  git:
    repo: 'https://github.com/imunes/imunes-security.git'
    dest: /opt/imunes-security
  when: (ansible_os_family == 'Debian' and ansible_distribution_release != 'jessie')

- name: Instala o Wireshark
  apt:
    state: latest
    pkg:
    - wireshark
    - wireshark-doc
  when: ansible_os_family == 'Debian'

- name: Set CAP_NET_RAW+eip on /usr/bin/dumpcap for Wireshark
  capabilities:
    path: /usr/bin/dumpcap
    capability: CAP_NET_RAW+eip
    state: present
  when: ansible_os_family == 'Debian'

- name: Set CAP_NET_ADMIN+eip on /usr/bin/dumpcap for Wireshark
  capabilities:
    path: /usr/bin/dumpcap
    capability: CAP_NET_ADMIN+eip
    state: present
  when: ansible_os_family == 'Debian'
