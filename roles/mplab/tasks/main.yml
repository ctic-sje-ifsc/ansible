- name: Verificando se eh versao nova do mplab - Linux Debian
  ansible.builtin.shell: ls /opt/microchip/mplabx
  register: result_mplab
  changed_when: false
  failed_when: false
  when: ansible_os_family == 'Debian'

- name: Apagando mplab - Linux
  ansible.builtin.file:
    state: absent
    path: /opt/microchip/
  when: (ansible_os_family == 'Debian' and result_mplab.stdout.find('6.10') == -1)

- name: Apagando links mplab - Linux
  ansible.builtin.file:
    state: absent
    path: /usr/bin/{{ old_mplab_link }}
  loop:
    - mplab_ide
    - mplab_ipe
    - mdb
  loop_control:
    loop_var: old_mplab_link
  when: (ansible_os_family == 'Debian' and result_mplab.stdout.find('6.10') == -1)

- name: Baixa e extrai mplab 6.10 - Debian
  ansible.builtin.unarchive:
    src: http://ansiblefiles.sj.ifsc.edu.br/mplab.bz
    dest: /opt
    creates: /opt/microchip/mplabx/v6.10
    remote_src: true
    owner: root
    group: root
    mode: '0755'
  when: ansible_os_family == 'Debian'

- name: Copiando os atalhos MPLAB - Linux Debian
  ansible.builtin.copy:
    src: "{{ mplab_desktop }}"
    dest: /usr/share/applications/
    owner: root
    group: root
    mode: '0644'
  loop:
    - mplab.desktop
    - mplab_ipe.desktop
  loop_control:
    loop_var: mplab_desktop
  when: ansible_os_family == 'Debian'

- name: Copiando figuras - Linux Debian
  ansible.builtin.copy:
    src: "{{ mplab_figs }}"
    dest: /usr/share/icons/
    owner: root
    group: root
    mode: '0755'
  loop:
    - mplab_ide.png
    - mplab_ipe.png
  loop_control:
    loop_var: mplab_figs
  when: ansible_os_family == 'Debian'

- name: Criando links simbolicos - Linux Debian
  ansible.builtin.file:
    src: /opt/microchip/mplabx/v6.10/mplab_platform/bin/{{ mplab_link }}
    dest: /usr/bin/{{ mplab_link }}
    state: link
  loop:
    - mplab_ide
    - mplab_ipe
  loop_control:
    loop_var: mplab_link
  when: ansible_os_family == 'Debian'

- name: Criando link simbolico com nome diferente - Linux Debian
  ansible.builtin.file:
    src: /opt/microchip/mplabx/v6.10/mplab_platform/bin/mdb.sh
    dest: /usr/bin/mdb
    state: link
  when: ansible_os_family == 'Debian'

- name: Extraindo avr8 toolchain - Linux Debian
  ansible.builtin.unarchive:
    src: avr8-toolchain.bz
    dest: /opt/microchip
    creates: /opt/microchip/avr8-gnu-toolchain
    owner: root
    group: root
  when: ansible_os_family == 'Debian'

- name: Copiando arquivos .rules - Linux Debian
  ansible.builtin.copy:
    src: "{{ rules_mplab }}"
    dest: /etc/udev/rules.d
    owner: root
    group: root
    mode: '0664'
  loop:
    - 99-jlink.rules
    - z010_mchp_tools.rules
    - z011_mchp_jlink.rules
    - z012_mchp_efr.rules
  loop_control:
    loop_var: rules_mplab
  when: ansible_os_family == 'Debian'

# - name: Adicionar PATH  - Linux Debian
#   lineinfile:
#     regexp: "^export OLDPATH="
#     state: present
#     path: /etc/bash.bashrc
#     line: 'export OLDPATH=/home/aluno'
#   when: ansible_os_family == 'Debian'

- name: Baixa e extrai xc8 v.2.05 - Debian 11
  ansible.builtin.unarchive:
    src: http://ansiblefiles.sj.ifsc.edu.br/xc8.bz
    dest: /opt/microchip
    creates: /opt/microchip/xc8
    remote_src: true
    owner: root
    group: root
    mode: '0755'
  when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bullseye')

- name: Copiando arquivo m328pdef.inc - Linux Debian
  ansible.builtin.copy:
    src: m328pdef.inc
    dest: /opt/microchip/xc8/v2.05/dfp/avrasm/inc/
    owner: root
    group: root
    mode: '0755'
  when: ansible_os_family == 'Debian'

# Antes de executar os comandos abaixo, precisa reiniciar as
# máquinas para confirmar que o /home/aluno estão limpos.

- name: Copiando arquivos de configuracao de usuario
  ansible.builtin.copy:
    src: "{{ mplab_config }}"
    dest: /home/aluno/
    owner: aluno
    group: root
    mode: '0755'
  loop:
    - .mchp_packs
    - .mplabcomm
    - .mplab_ide
  loop_control:
    loop_var: mplab_config
  when: (ansible_os_family == 'Debian' and  play == 1)

- name: Faz backup do último aluno.tgz e cria um novo com as novas configuracoes
  ansible.builtin.shell: /bin/mv /home/backup/aluno.tgz /home/backup/aluno-$(date +'%d-%m-%Y').tgz ; /bin/tar -zcvf /home/backup/aluno.tgz /home/aluno
  when: (ansible_os_family == 'Debian' and  play == 1)
