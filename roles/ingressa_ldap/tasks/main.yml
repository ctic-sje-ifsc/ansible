# Linux
- name: Instalar pacotes necessarios para autenticação LDAP
  apt:
    state: latest
    pkg:
    - libnss-ldap
    - libpam-ldap
    - ldap-utils
    - libpam-mount
    - cifs-utils
  when: ansible_distribution == 'Debian'

- name: Copiando arquivo /etc/ldap/ldap.conf
  copy:
    src: ldap.conf
    dest: /etc/ldap/ldap.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == 'Debian'

- name: Copiando arquivo /etc/{{ ldap_conf }}
  copy:
    src: ldap.conf
    dest: /etc/{{ ldap_conf }}
    owner: root
    group: root
    mode: 0644
  loop:
    - ldap.conf
    - libnss-ldap.conf
    - pam_ldap.conf
  loop_control:
    loop_var: ldap_conf
  when: ansible_os_family == 'Debian'

- name: Copiando arquivo /etc/nsswitch.conf
  copy:
    src: nsswitch.conf
    dest: /etc/nsswitch.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == 'Debian'

- name: Copiando arquivo /etc/pam.d/{{ config_ldap }}
  copy:
    src: "{{ config_ldap }}"
    dest: /etc/pam.d/{{ config_ldap }}
    owner: root
    group: root
    mode: 0644
  loop:
    - common-auth
    - common-session
  loop_control:
    loop_var: config_ldap
  when: ansible_os_family == 'Debian'

- name: Copiando arquivo /etc/security/pam_mount.conf.xml
  copy:
    src: pam_mount.conf.xml
    dest: /etc/security/pam_mount.conf.xml
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == 'Debian'

- name: Instala cups-client
  apt: name=cups-client state=latest
  when: ansible_distribution == 'Debian'

- name: Cria diretório /etc/cups
  file:
    path: /etc/cups
    state: directory
    owner: root
    group: lp
    mode: 0755
  when: ansible_os_family == 'Debian'

- name: Copia arquivo client.conf para configurar o cups client
  copy:
    src: client.conf
    dest: /etc/cups/client.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == 'Debian'

- name: Instala o lightdm
  apt:
    state: latest
    pkg:
    - lightdm
    - lightdm-gtk-greeter
    - lightdm-gtk-greeter-settings
  when: ansible_distribution == 'Debian'

- name: Remove GDM3
  apt: name=gdm3 state=absent purge=yes
  when: ansible_distribution == 'Debian'

# Windows

- name: Verifica interface de rede
  win_shell: "(ipconfig | findstr Ethernet).substring(19,10)"
  register: interface_win
  ignore_errors: True
  changed_when: False
  when: ansible_os_family == 'Windows'
### As vezes dá erro porque a interface não vem seguido de um numero, caso isso
### ocorra substituir a substring (19,10) para (19,8)

- name: Setar servidor WINS e DNS - Windows 7
  win_shell: netsh interface ip add wins name="Conexão Local" addr=191.36.8.68 ; netsh interface ip add wins name="Conexão Local" addr=191.36.8.67 index=2; netsh interface ip set dnsservers name="Conexão Local" source=static addr=191.36.8.1 ; netsh interface ip add dns name="Conexão Local" addr=191.36.8.66 index=2
  when: (ansible_os_family == 'Windows' and ansible_os_name == 'Microsoft Windows 7 Professional')

- name: Setar servidor WINS e DNS na interface {{ interface_win.stdout |trim }} - Windows 10
  win_shell: netsh interface ip add wins name="{{ interface_win.stdout |trim }}" addr=191.36.8.67 ; netsh interface ip add wins name="{{ interface_win.stdout |trim }}" addr=191.36.8.68 index=2 ; netsh interface ip set dnsservers name="{{ interface_win.stdout |trim }}" source=static addr=191.36.8.1 ; netsh interface ip add dns name="{{ interface_win.stdout |trim }}" addr=191.36.8.66 index=2
  when: (ansible_os_family == 'Windows' and ansible_os_name == 'Microsoft Windows 10 Pro')

# - name: Setar servidor WINS e DNS - Windows 10
#   win_shell: netsh interface ip set wins name="Ethernet 3" source=static addr=191.36.8.67 ; netsh interface ip add wins name="Ethernet 3" addr=191.36.8.68 index=2 ; netsh interface ip set dnsservers name="Ethernet 3" source=static addr=191.36.8.67 ; netsh interface ip add dns name="Ethernet 3" addr=191.36.8.68 index=2
#   when: (ansible_os_family == 'Windows' and ansible_os_name == 'Microsoft Windows 10 Pro')

- name: Setar sufixo DNS - Windows
  win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters
    name: SearchList
    data: "cefetsc.edu.br,sj.ifsc.edu.br"
  when: ansible_os_family == 'Windows'

- name: Ingressa no dominio - Windows
  win_domain_membership:
    dns_domain_name: cefetsc
    domain_admin_user: "{{ domain_admin_user }}"
    domain_admin_password: "{{ domain_admin_password }}"
    state: domain
  register: domain_state
  when: (ansible_os_family == 'Windows' and ansible_windows_domain_member == false)

- win_reboot:
  when: (ansible_os_family == 'Windows' and ansible_windows_domain_member == false and domain_state.reboot_required)
