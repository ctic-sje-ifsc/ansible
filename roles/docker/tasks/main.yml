- name: Instalar pacotes necessários do Docker
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
  when: (ansible_os_family == 'Debian')

- name: Adicionar a chave do repositório do docker no Debian
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
    keyring: /usr/share/keyrings/docker.gpg
  when: ansible_os_family == 'Debian'

- name: Remove /etc/apt/sources.list.d/download_docker_com_linux_debian.list
  ansible.builtin.file:
    state: absent
    path: /etc/apt/sources.list.d/download_docker_com_linux_debian.list
  when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bookworm')

- name: Adicionar repositório do docker no bookworm
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/debian bookworm stable
    state: present
    update_cache: true
    filename: docker
  when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bookworm')

- name: Adicionar repositório do docker no bullseye
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian bullseye stable
    state: present
    update_cache: true
  when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bullseye')

- name: Instalar o docker no debian
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - docker-ce-rootless-extras
  when: ansible_os_family == 'Debian'

- name: Adiciona usuários no grupo docker
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items:
    - aluno
    - mello
  when: ansible_os_family == 'Debian'

- name: Instalar lista de pacotes necessarios o funcionamento do rootless
  ansible.builtin.apt:
    pkg:
      - uidmap
      - dbus-user-session
      - fuse-overlayfs
      - slirp4netns
  when: (ansible_os_family == 'Debian' and (ansible_distribution_release == 'bullseye' or ansible_distribution_release == 'bookworm'))

## Não funcionou ainda

# - name: Desativa serviços do docker -- rootless
#   ansible.builtin.systemd_service:
#     name: "{{ item }}"
#     state: stopped
#     enabled: false
#   with_items:
#     - docker.service
#     - docker.socket
#   when: ansible_os_family == 'Debian'

# - name: Execura o script rootless no usuário aluno
#   become: true
#   become_user: aluno
#   ansible.builtin.command:
#     cmd: /usr/bin/dockerd-rootless-setuptool.sh install --force
#   when: ansible_os_family == 'Debian'
#   tags: rootless
