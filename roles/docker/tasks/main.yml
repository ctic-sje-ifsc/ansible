- name: Instalar pacotes necessários do Docker
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
  when: (ansible_os_family == 'Debian')

- name: Adicionar a chave do repositório do docker no Debian
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
    keyring: /usr/share/keyrings/docker.gpg
  when: ansible_os_family == 'Debian'

- name: Adicionar repositório do docker no bookworm
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/debian bookworm stable
    state: present
    update_cache: true
    filename: docker
  when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bookworm')

- name: Instala pacotes necessários para o funcionamento do rootless
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - docker-ce-rootless-extras
      - slirp4netns
      - iptables
      - docker-ce
      - gnome-terminal
  when: ansible_os_family == 'Debian'
  tags: docker

- name: Ativa o docker - nencessário para o IMUNES
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
  loop:
    - docker.service
    - docker.socket
  when: ansible_os_family == 'Debian'
  tags: services

- name: Link para docker-compose
  ansible.builtin.file:
    src: /usr/libexec/docker/cli-plugins/docker-compose
    dest: /usr/local/bin/docker-compose
    state: link
  when: ansible_os_family == 'Debian'

- name: Docker rootless
  become: true
  become_user: aluno
  ansible.builtin.command:
    cmd: /usr/bin/dockerd-rootless-setuptool.sh install --force
  when: ansible_os_family == 'Debian'
  tags: rootless_install

- name: Cria diretórios
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: aluno
    group: aluno
    mode: '0755'
  loop:
    - /home/aluno/.config/systemd/user
    - /home/aluno/.config/systemd/user/default.target.wants
  when: ansible_os_family == 'Debian'

- name: Cria serviço para docker rootless
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Docker Application Container Engine (Rootless)
      Documentation=https://docs.docker.com/go/rootless/
      Requires=dbus.socket

      [Service]
      Environment=PATH=/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
      ExecStart=/usr/bin/dockerd-rootless.sh
      ExecReload=/bin/kill -s HUP $MAINPID
      TimeoutSec=0
      RestartSec=2
      Restart=always
      StartLimitBurst=3
      StartLimitInterval=60s
      LimitNOFILE=infinity
      LimitNPROC=infinity
      LimitCORE=infinity
      TasksMax=infinity
      Delegate=yes
      Type=notify
      NotifyAccess=all
      KillMode=mixed

      [Install]
      WantedBy=default.target
    dest: /home/aluno/.config/systemd/user/docker.service
    owner: aluno
    group: aluno
    mode: '0644'
  when: ansible_os_family == 'Debian'

- name: Link para docker.service
  ansible.builtin.file:
    src: /home/aluno/.config/systemd/user/docker.service
    dest: /home/aluno/.config/systemd/user/default.target.wants/docker.service
    state: link
  when: ansible_os_family == 'Debian'

- name: Adiciona linha no .bashrc do aluno
  ansible.builtin.lineinfile:
    line: 'export DOCKER_HOST=unix:///run/user/1000/docker.sock'
    dest: /home/aluno/.bashrc
    state: absent
  when: ansible_os_family == 'Debian'
  tags: bashrc

- name: Adiciona linha no .bashrc do aluno
  ansible.builtin.lineinfile:
    line: 'export DOCKER_HOST=unix:///run/user/1001/docker.sock'
    dest: /home/aluno/.bashrc
  when: ansible_os_family == 'Debian'
  tags: bashrc
