#### Linux

- name: Instala pacotes
  ansible.builtin.apt:
    pkg:
      - quota
      - libpam-modules
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"]

- name: Configura /etc/fstab
  ansible.builtin.replace:
    path: /etc/fstab
    after: 'ext4'
    before: "0"
    regexp: '^.*errors=remount-ro.*$'
    replace: '  defaults,usrquota,grpquota,errors=remount-ro  '
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"]

- name: Remount a mounted volume and append exec to the existing options
  ansible.posix.mount:
    path: /
    state: remounted
    opts: defaults,usrquota,grpquota,errors=remount-ro
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"]

- name: Configura /etc/pam.d/common-session
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-session
    line: 'session  required   pam_setquota.so bsoftlimit=20000000 bhardlimit=22000000 startuid=1002 enduid=0 fs=/'
    backup: true
    state: present
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"]

- name: Executar quotaon -ap e registrar a saída
  ansible.builtin.command: quotaon -ap
  register: quotaon_output
  ignore_errors: true
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"]
  tags: quotaon

- name: Exibir a saída do comando quotaon
  ansible.builtin.debug:
    var: quotaon_output.stdout_lines
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"]
  tags: quotaon

- name: Cria e ativa quotas e reinicia o sistema
  ansible.builtin.command: quotacheck -cuM /
  register: quotacheck_output
  when: ( "'user quota on / (/dev/sda5) is off' in quotaon_output.stdout_lines" and inventory_hostname in groups["lab_profs_lin"] )
  tags: quotaon

- name: Reiniciar o sistema
  ansible.builtin.command: /sbin/reboot
  when: ( "'user quota on / (/dev/sda5) is off' in quotaon_output.stdout_lines" and inventory_hostname in groups["lab_profs_lin"] )
  tags: quotaon

- name: Cria usuário quota para base de cópia
  ansible.builtin.user:
    name: quota
    uid: 666
    local: true
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"]

- name: Setando cota de 20G para o usuário quota
  ansible.builtin.command: setquota -u quota 20G 22G 0 0 /
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"]

- name: Fazendo cópia da quota padrão para todos os usuários
  ansible.builtin.shell: "edquota -p quota $(awk -F: '$3 > 1002 {print $1}' /etc/passwd)"
  changed_when: False
  when: ansible_os_family == 'Debian' and inventory_hostname in groups["lab_profs_lin"] and inventory_hostname in groups["lab_profs_lin"]
