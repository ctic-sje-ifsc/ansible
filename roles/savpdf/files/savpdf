#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# atualizado para Python 3 usando chatgpt - 27/09/2024
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk
import shutil
from os.path import expanduser
from glob import glob
import os
import sys
import time

# savpdf v0.002 (atualizado)
# Holger Rückershäuser 2014
class savpdf:
    def __init__(self):
        self.dialog = Gtk.FileChooserDialog(title="Save as", action=Gtk.FileChooserAction.SAVE,
                                            buttons=(Gtk.STOCK_CANCEL, Gtk.ResponseType.CANCEL,
                                                     Gtk.STOCK_SAVE, Gtk.ResponseType.OK))

        self.dialog.set_default_response(Gtk.ResponseType.OK)
        self.dialog.set_do_overwrite_confirmation(True)

        file_filter = Gtk.FileFilter()
        file_filter.set_name("PDF files")
        file_filter.add_pattern("*.pdf")
        self.dialog.add_filter(file_filter)
        self.dialog.set_current_name(fname)
        res = self.dialog.run()

        if res == Gtk.ResponseType.OK:
            try:
                nome = self.dialog.get_filename() + ".pdf"
                shutil.copy(docn, nome)
                os.remove(docn)
            except Exception as e:
                msge = str(e)
                parent = None
                md = Gtk.MessageDialog(parent, Gtk.DialogFlags.DESTROY_WITH_PARENT, Gtk.MessageType.ERROR,
                                       Gtk.ButtonsType.CLOSE, msge)
                md.run()
                md.destroy()
        else:
            os.remove(docn)

        self.dialog.destroy()
        while Gtk.events_pending():
            Gtk.main_iteration_do(False)

if __name__ == "__main__":
    # Caminho para o arquivo PDF ($HOME/PDF)
    pdf_path = expanduser("~") + '/PDF'

    while True:
        time.sleep(1)

        doc = glob(pdf_path + '/*.pdf')
        try:
            docn = doc[0]
            fname = docn[docn.rfind('/')+1:]
        except IndexError:
            pass

        if doc:
            sav = savpdf()
